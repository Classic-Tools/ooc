#ifndef _MODULE_URI_Scheme_File_
#define _MODULE_URI_Scheme_File_

#include "__typemap.h"
#include "RT0.oh"
#include "Files.oh"
#include "URI.oh"
#include "URI/Error.oh"
#include "URI/Scheme/Hierarchical.oh"
#include "URI/Authority/ServerBased.oh"
#include "RT0.oh"
#include "Object.oh"
typedef struct URI_Scheme_File__URIDesc *URI_Scheme_File__URI;
typedef struct URI_Scheme_File__URIDesc {
  URI_String__StringPtr schemeId;
  URI__Authority authority;
  URI__Query query;
  URI_Scheme_Hierarchical__Segment pathList;
  OOC_CHAR8 absolutePath;
} URI_Scheme_File__URIDesc;
extern void URI_Scheme_File__Init(URI_Scheme_File__URI file, URI_String__StringPtr schemeId, URI__Authority authority, URI__Query query);
extern URI_Scheme_File__URI URI_Scheme_File__New(URI_String__StringPtr schemeId, URI__Authority authority, URI__Query query);
extern URI__Authority URI_Scheme_File__URIDesc_NewAuthority(URI_Scheme_File__URI file);
#define _TBN_URI_Scheme_File__URIDesc_NewAuthority 10
typedef URI__Authority (*_TBP_URI_Scheme_File__URIDesc_NewAuthority)(URI_Scheme_File__URI file);
extern URI__Query URI_Scheme_File__URIDesc_NewQuery(URI_Scheme_File__URI file);
#define _TBN_URI_Scheme_File__URIDesc_NewQuery 11
typedef URI__Query (*_TBP_URI_Scheme_File__URIDesc_NewQuery)(URI_Scheme_File__URI file);
extern URI_Scheme_File__URI URI_Scheme_File__URIDesc_Clone(URI_Scheme_File__URI file);
#define _TBN_URI_Scheme_File__URIDesc_Clone 1
typedef URI_Scheme_File__URI (*_TBP_URI_Scheme_File__URIDesc_Clone)(URI_Scheme_File__URI file);
extern void URI_Scheme_File__URIDesc_GetPath(URI_Scheme_File__URI file, OOC_CHAR8 filePath[], OOC_LEN filePath_0d);
#define _TBN_URI_Scheme_File__URIDesc_GetPath 19
typedef void (*_TBP_URI_Scheme_File__URIDesc_GetPath)(URI_Scheme_File__URI file, OOC_CHAR8 filePath[], OOC_LEN filePath_0d);
extern Files__File URI_Scheme_File__URIDesc_GetChannel(URI_Scheme_File__URI file, OOC_INT8 mode, Msg__Msg *res);
#define _TBN_URI_Scheme_File__URIDesc_GetChannel 3
typedef Files__File (*_TBP_URI_Scheme_File__URIDesc_GetChannel)(URI_Scheme_File__URI file, OOC_INT8 mode, Msg__Msg *res);
extern URI_Scheme_File__URI URI_Scheme_File__NewPrototype();
extern URI_Scheme_File__URI URI_Scheme_File__GetCwd();
extern URI_Scheme_File__URI URI_Scheme_File__ToURI(const OOC_CHAR8 filePath__ref[], OOC_LEN filePath_0d);
extern void OOC_URI_Scheme_File_init();
extern void OOC_URI_Scheme_File_init0();

/* run-time meta data */
extern RT0__StructDesc _td_URI_Scheme_File__URI;
extern RT0__StructDesc _td_URI_Scheme_File__URIDesc;
extern RT0__StructDesc _td_URI_Scheme_File__2179;
extern RT0__StructDesc _td_URI_Scheme_File__2777;
extern RT0__StructDesc _td_URI_Scheme_File__3484;
extern RT0__StructDesc _td_URI_Scheme_File__3981;
extern RT0__StructDesc _td_URI_Scheme_File__4163;
#endif /* _MODULE_URI_Scheme_File_ */

/* --- */
