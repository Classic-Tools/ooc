#ifndef _MODULE_OOC_C_IRtoC_
#define _MODULE_OOC_C_IRtoC_

#include <__typemap.h>
#include <RT0.oh>
#include <OOC/IR.oh>
#include <OOC/C/DeclWriter.oh>
#include <OOC/Make/TranslateToC.oh>
#include <RT0.oh>
#include <Object.oh>
#include <Exception.oh>
typedef struct OOC_C_IRtoC__TranslatorDesc *OOC_C_IRtoC__Translator;
typedef struct OOC_C_IRtoC__TranslatorDesc {
  OOC_C_DeclWriter__Writer w;
  OOC_C_DeclWriter__Writer wd;
  OOC_IR__ProcedureList procList;
  OOC_INT32 currentProc;
  OOC_C_Naming__QualTypeData qtdData;
} OOC_C_IRtoC__TranslatorDesc;
extern void OOC_C_IRtoC__WriteStatmSeq(OOC_C_DeclWriter__Writer w, OOC_IR__StatementSeq statmSeq);
extern void OOC_C_IRtoC__InitTranslator(OOC_C_IRtoC__Translator t);
extern OOC_C_IRtoC__Translator OOC_C_IRtoC__NewTranslator(void);
extern void OOC_C_IRtoC__TranslatorDesc_WriteProcBody(OOC_C_IRtoC__Translator t, OOC_IR__Procedure proc);
#define _TBN_OOC_C_IRtoC__TranslatorDesc_WriteProcBody 3
typedef void (*_TBP_OOC_C_IRtoC__TranslatorDesc_WriteProcBody)(OOC_C_IRtoC__Translator t, OOC_IR__Procedure proc);
extern void OOC_OOC_C_IRtoC_init(void);
extern void OOC_OOC_C_IRtoC_init0(void);

/* run-time meta data */
extern RT0__StructDesc _td_OOC_C_IRtoC__Translator;
extern RT0__StructDesc _td_OOC_C_IRtoC__TranslatorDesc;
#endif /* _MODULE_OOC_C_IRtoC_ */

/* --- */
